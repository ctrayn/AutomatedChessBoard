#pragma once
#include "Piece.h"

bool accept_positions(struct Piece current_best[8][8], struct Piece possible_best[8][8]);
struct Move get_best_move(struct Board board);
struct Move eval_move(struct Board old, struct Board new);

#define RUN_LEN 10000

static const int pawnTable[8][8] = {
	{ 10, 10, 10, 10, 10, 10, 10, 10 },
	{  9,  9,  9,  9,  9,  9,  9,  9 },
	{  4,  4,  5,  8,  8,  5,  4,  4 },
	{  3,  3,  4,  7,  7,  4,  3,  3 },
	{  2,  2,  2,  6,  6,  2,  2,  2 },
	{  3,  1,  0,  0,  0,  1,  1,  3 },
	{  3,  4,  4,  0,  0,  4,  4,  3 },
	{  0,  0,  0,  0,  0,  0,  0,  0 }
};

static const int knightTable[8][8] = {
	{  0,  1,  2,  2,  2,  2,  1,  0 },
 	{  1,  3,  4,  4,  4,  4,  3,  1 },
 	{  2,  4,  6,  7,  7,  6,  4,  2 },
 	{  2,  5,  7,  8,  8,  7,  5,  2 },
 	{  2,  4,  7,  8,  8,  7,  4,  2 },
 	{  2,  5,  6,  7,  7,  6,  5,  2 },
 	{  1,  3,  4,  5,  5,  4,  3,  1 },
 	{  0,  1,  3,  2,  2,  3,  1,  0 }
};

static const int bishopTable[8][8] = {
	{  1,  2,  2,  2,  2,  2,  2,  1 },
 	{  2,  3,  3,  3,  3,  3,  3,  2 },
 	{  2,  3,  4,  5,  5,  4,  3,  2 },
 	{  2,  4,  4,  5,  5,  4,  4,  2 },
 	{  2,  3,  5,  5,  5,  5,  3,  2 },
 	{  2,  5,  5,  5,  5,  5,  5,  2 },
 	{  2,  4,  3,  3,  3,  3,  4,  2 },
 	{  1,  2,  0,  2,  2,  0,  2,  1 }
};

static const int kingTable[8][8] = {
	{  2,  1,  1,  0,  0,  1,  1,  2 },
  {  2,  1,  1,  0,  0,  1,  1,  2 },
  {  2,  1,  1,  0,  0,  1,  1,  2 },
  {  2,  1,  1,  0,  0,  1,  1,  2 },
  {  3,  2,  2,  1,  1,  2,  2,  3 },
  {  5,  4,  4,  4,  4,  4,  4,  5 }, 
  {  8,  8,  6,  6,  6,  6,  8,  8 },
  {  8,  9,  7,  6,  6,  7,  9,  8 }
};

static const int rookTable[8][8] = {
	{  0,  1,  2,  3,  3,  2,  1,  0 },
	{  1,  2,  3,  4,  4,  3,  2,  1 },
	{  2,  3,  4,  5,  5,  4,  3,  2 },
	{  3,  4,  5,  6,  6,  5,  4,  3 },
	{  3,  4,  5,  6,  6,  5,  4,  3 },
	{  2,  3,  4,  5,  5,  4,  3,  2 },
	{  1,  2,  3,  4,  4,  3,  2,  1 },
	{  0,  1,  2,  3,  3,  2,  1,  0 },
};

static const int queenTable[8][8] = {
	{  0,  1,  2,  3,  3,  2,  1,  0 },
	{  1,  2,  3,  4,  4,  3,  2,  1 },
	{  2,  3,  4,  5,  5,  4,  3,  2 },
	{  3,  4,  5,  6,  6,  5,  4,  3 },
	{  3,  4,  5,  6,  6,  5,  4,  3 },
	{  2,  3,  4,  5,  5,  4,  3,  2 },
	{  1,  2,  3,  4,  4,  3,  2,  1 },
	{  0,  1,  2,  3,  3,  2,  1,  0 },
};
